as.numeric(shots.shiny$home_score),
as.numeric(shots.shiny$away_score))
#This is the calculation for calculating the difference between actual and expected
shots.shiny$xG_Diff <- shots.shiny$TeamScore - shots.shiny$xGoal_Total
#The next three lines just gives me the an additional column to the shots dataframe to let me know which team took the shot
teams.df <- unique(all.matches.df[,c("home_team.home_team_id","home_team.home_team_name")])
shots.shiny.final <- merge(shots.shiny,teams.df,by.x="team_id",by.y="home_team.home_team_id")
colnames(shots.shiny.final)[25] <- "team_name"
#Adding a column to let me know if a shot was assisted or not
shots.shiny.final$isAssisted <- ifelse(is.na(shots.shiny.final$keypassid),FALSE,TRUE)
View(shots.shiny)
View(shots.shiny)
View(shots.shiny.final)
View(shots.shiny.final)
View(shots.shiny.final)
View(shots.shiny.final)
install.packages("shiny")
install.packages("shiny")
library(shiny)
g = 6.9
g
g = 6.9
s = as.integer(3)
is.integer(s)
s = k+2i
k = 1+2i
s = k+2i
s
g = a&b
g = s&k
g
s
k
k = 4+2i
g = s&k
g
cat("\014")
vec1 <- c(2,4,6,7,9)
vec1
vec2 <- (1,2,3,4,5,6,7,8,9,10)
vec2 <- c(1,2,3,4,5,6,7,8,9,10)
vec2
rbind(vec1,vec2)
cbind(vec1,vec2)
rbind(vec2,vec1)
cbind(vec2,vec1)
vec2 <- c(2,4,6,7,9)
vec1 <- (1,2,3,4,5,6,7,8,9,10)
vec2 <- c(2,4,6,7,9)
cat("\014")
vec1 <- c(1,2,3,4,5,6,7,8,9,10)
vec2 <- c(2,4,6,7,9)
max1 <- rbind(vec1,vec2)
max2 <- cbind(vec1,vec2)
max1
max2
sno <- 1:10
regno <- 100:110
intern_comp <- c('google','microsoft','ibm','intel','american express','accenture','here','amazon','adobe','jp morgan chase')
no_months <- c(2,3,4,2,4,6,3,2,3,4)
len(sno)
length(sno)
length(regno)
regno <- regno[:10]
regno[:10]
regno[:1]
regno[10]
regno-110
regno <- 100:109
length((regno))
sno <- 1:10
regno <- 100:110
intern_comp <- c('google','microsoft','ibm','intel','american express','accenture','here','amazon','adobe','jp morgan chase')
no_months <- c(2,3,4,2,4,6,3,2,3,4)
regno <- 100:109
cat("/014")
cat("\014")
sno <- 1:10
regno <- 100:109
intern_comp <- c('google','microsoft','ibm','intel','american express','accenture','here','amazon','adobe','jp morgan chase')
no_months <- c(2,3,4,2,4,6,3,2,3,4)
loc <- c('delhi','mumbai','bangalore','chennai','delhi','chennai','hyderabad','hyderabad','bangalore','mumbai')
intern_df <- data.frame(sno,regno,intern_comp,no_months,loc)
intern_df
vec1 <- (1,2,3,4,5,6,7,8,9,10)
vec1 <- c(1,2,3,4,5,6,7,8,9,10)
vec2 <- c(2,4,6,7,9)
vec2
max1 <- rbind(vec1,vec2)
max2 <- cbind(vec1,vec2)
max1
maax2
max2
arr1 = array(data = vec1)
arr1
help(list)
main_list <- list(vec2,max2,intern_df,arr1)
main_list
vec1 <- c(1,2,3,4,5,6,7,8,9,10)
vec2 <- c(2,4,6,7,9)
vec1
vec2
max1 <- rbind(vec1,vec2)
max2 <- cbind(vec1,vec2)
mmax1
max1
max2
cat("\014")
a<-3.4
b<-2.67
a+b
a-b
a=0
a=0
x <- -1 if(a!=0){}
else{
1
}
x <- -1 if(a!=0)
x <- -1 if(a!=0){
x <- -1
}
x<-1
if(x>0){
print("positive")
}
else{
print("negative")
}
x<1
if(x>0){
print("positive")
}
x<-1
if(x>0){
print("positive")
}
else{
print("negative")
}
if(x>0){
print("positive")
} else{
print("negative")
}
x<-1
if(x>0){
print("positive")
} else{
print("negative")
}
x<-1
x<- -1
if(x>0){
print("positive")
} else{
print("negative")
}
("cat\014")
cat("\014")
readint <- function(){
n<- as.integer(readline(prompt = "Enter an integer"))
if (n>=0){
print("This is non negative number")
}else{
print("This is a negative number")
}
}
readint()
readint()
for (i in 1:n){
print("Hello for ",i," user")
}
n=100
for (i in 1:n){
print("Hello for ",i," user")
n=100
for (i in 1:n){
print("Hello for ",i," user")
}
}
n=100
for (i in 1:n){
print("Hello for ",i," user")
}
for (i in 1:n){
print("Hello for "+i+" user")
}
for (i in 1:n){
print("Hello for ",i," user")
}
print("Hello for ",i," user")
print(paste("Hello for ",i," user"))
for (i in 1:n){
print(paste("Hello for ",i," user"))
}
data(custdata)
data(lahman)
library(Lahman)
'''readint <- function(){
n<- as.integer(readline(prompt = "Enter an integer"))
if (n>=0){
print("This is non negative number")
}else{
print("This is a negative number")
}
}
readint()
n=100
for (i in 1:n){
print(paste("Hello for ",i," user"))
}
library(Lahman)
'''
'''readint <- function(){
n<- as.integer(readline(prompt = "Enter an integer"))
if (n>=0){
print("This is non negative number")
}else{
print("This is a negative number")
}
}
readint()
n=100
for (i in 1:n){
print(paste("Hello for ",i," user"))
}
'''
install.packages("ggplot")
install.packages("ggplot2")
cat("\014")
history
history()
cat("\014")
install.packages("ggplot2")
library(ggplot2)
read.csv('custdata.csv')
library(ggplot2)
ggplot(a) + geom_bar(aes(x=marital.stat))
ggplot(custdata) + geom_histogram(aes(x=age), binwidth = 5,fill='gray')
custdata <- read.csv('custdata.csv')
ggplot(custdata) + geom_histogram(aes(x=age), binwidth = 5,fill='gray')
ggplot(custdata) +
geom_density(aes(x=income)) +
scale_x_continuous(labels=dollar)
custdate
custdata
custdata.columns
custdata.column
custdata.col
names(custdata)
library(scales)
ggplot(custdata) +
geom_density(aes(x=income)) +
scale_x_continuous(labels=dollar)
ggplot(custdata)+ geom_density(aes(x=income))+
scale_x_log10((breaks=c(100,1000,10000,100000),labels=dollar)+
annotation_logticks(sides="bt"))
ggplot(custdata)+ geom_density(aes(x=income))+
scale_x_log10((breaks=c(100,1000,10000,100000),labels=dollar)+
annotation_logticks(sides="bt")
ggplot(custdata)+ geom_density(aes(x=income))+
scale_x_log10((breaks=c(100,1000,10000,100000),labels=dollar) + annotation_logticks(sides="bt")
lot(custdata)+ geom_density(aes(x=income))+
scale_x_log10((breaks=c(100,1000,10000,100000),labels=dollar))+
annotation_logticks(sides="bt")
ggplot(custdata)+ geom_density(aes(x=income))+
scale_x_log10(breaks=c(100,1000,10000,100000),labels=dollar)+
annotation_logticks(sides="bt")
ggplot(custdata)
+ geom_bar(aes(x=marital.stat,fill=health.ins),position = "dodge")
ggplot(custdata)
+ geom_bar(aes(x=marital.stat,
fill=health.ins),
position = "dodge")
x<-c(1,"a",TRUE)
class(x)
repeat
()
repeat{}
a <-c(1,2,3,4,5)
2 %in% a
x<2:5
x<-2:5
y<-5:8
x+y
mat <- matrix(1:9, nrow=3,ncol=3)
mat
mat <- matrix(1:9, nrow=3,ncol=3,byrow=True)
mat <- matrix(1:9, nrow=3,ncol=3,byrow=TRUE)
mat
apply(mat,2,sum)
arr <- array(c((1,2,3),(4,5,6),(7,8,9)),dim=c(3,3,2))
arr <- array(c(1,2,3,4,5,6,7,8,9),dim=c(3,3,2))
arr
arr <- array(c(1,2,3,4,5,6,7,8,9),dim=c(3,3,2),dimnames = c("one","two","three"))
arr <- array(c(1,2,3,4,5,6,7,8,9),dim=c(3,3,2),dimnames = list(c("one","two","three")))
arr
arr <- array(c(1,2,3,4,5,6,7,8,9),dim=c(3,3,2),dimnames = list(c("one_r","two_r","three_r"),c("one_c","two_c","three_c")))
arr
arr <- array(1:9,dim=c(3,3,2),dimnames = list(c("one_r","two_r","three_r"),c("one_c","two_c","three_c")))
arr
mat <- matrix(11:19, nrow=3, ncol=3,byrow = TRUE)
mat
apply(mat,2,sum)
x <- c(18,54,38,29,60,42)
quantile(x)
rm(list = ls())
x = read.csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
View(x)
View(x)
head(x)
str(x)
library(readr)
y = read_csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
View(y)
View(y)
library(data.table)
z = fread("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
View(z)
View(z)
View(z)
View(z)
str(x)
str(y)
badFile = "http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv"
read_lines(badFile,skip = 1071,n_max = 3)
mean(y[,2])
mean(as.numeric(y[,2]))
which(is.na(as.numeric(y[,2])))
bad = which(is.na(as.numeric(y[,2])))
y[bad,]  # yeah, that's messy.
mean(y[-bad,2])
mean(as.numeric(y[-bad,2]))
y = read.csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv", colClasses = c("character", "character"))
str(y)
sum(is.na(y))  # cool!
mean(y[,2])
mean(y[,2])
y[,2]
mean(int(y[,2]))
mean(integer(y[,2]))
mean(y[,2])
#  what about fread?
fread("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
col1 <- parse_integer(y[,2])
mean(col1)
col1 <- parse_integer(x[,2])
col1 <- parse_integer(y[,2])
y <- y[-c(1097)]
col1 <- parse_integer(y[,2])
y <- y[-c(1098)]
col1 <- parse_integer(y[,2])
y <- y[-c(1097),]
col1 <- parse_integer(y[,2])
mean(col1)
sum(is.na(col1))
col1 <- col1[!is.na(col1)]
mean(col1)
y <- y[-c(1097),]
y <- y[-c(1097),]
sum(is.na(y))
col1 <- parse_integer(y[,2])
sum(is.na(col1))
col1 <- col1[!is.na(col1)]
mean(col1)
y[is.na(y)]
is.na(col1)
col1[is.na(col1)]
y <- y[-c(1097),]
sum(is.na(y))
y[is.na(y)]
col1 <- parse_integer(y[,2])
sum(is.na(col1))
col1[is.na(col1)]
rm(list = ls())
x = read.csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
head(x)
str(x)
library(readr)
y = read_csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
library(data.table)
z = fread("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
rm(list = ls())
x = read.csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
head(x)
str(x)
library(readr)
y = read_csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
library(data.table)
z = fread("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
sum(is.na(x))
sum(is.na(y))
y = read.csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv", colClasses = c("character", "character"))
str(y)
sum(is.na(y))  # cool!
y <- y[-c(1097),]
sum(is.na(y))
y[is.na(y)]
col1 <- parse_integer(y[,2])
sum(is.na(col1))
col1[is.na(col1)]
col1 <- col1[!is.na(col1)]
mean(col1)
mean(as.numeric(y[,2]))
which(is.na(as.numeric(y[,2])))
col1[is.na(as.numeric(col1))]
col1 <- parse_integer(y[,2])
sum(is.na(col1))
col1 <- col1[!is.na(col1)]
col1[is.na(as.numeric(col1))]
col1[is.na(col1)]
sum(is.na(col1))
col1 <- parse_integer(y[,2])
sum(is.na(col1))
col1[is.na(col1)]
col1 <- col1[!is.na(col1)]
mean(col1)
mean(as.numeric(y[,2]))
which(is.na(as.numeric(y[,2])))
'col1 <- parse_integer(y[,2])
sum(is.na(col1))
col1[is.na(col1)]
col1 <- col1[!is.na(col1)]
mean(col1)'
y[is.na(y)]
y <- y[-c(1097),]
sum(is.na(y))
y[is.na(y)]
y = read.csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv", colClasses = c("character", "character"))
str(y)
sum(is.na(y))  # cool!
y = read_csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
is.na(y)
rowSums(is.na(y))
y[rowSums(is.na(y)) > 0, ]
z = fread("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv")
z[rowSums(is.na(z)) > 0,]
x[rowSums(is.na(x)) > 0,]
y = read.csv("http://pages.stat.wisc.edu/~karlrohe/ds479/data/badRead.csv", colClasses = c("character", "character"))
str(y)
sum(is.na(y))  # cool!
y[rowSums(is.na(y)) > 0,]
# y[rowSums(is.na(y)) > 0,]
y[1001,]
sum(is.na(y))
# y[rowSums(is.na(y)) > 0,]
y[1097,]
x[1097,]
y[1072,]
x[1072,]
z[1072,]
z[rowSums(is.na(z)) > 0,]
is.na(z)
sum(is.na(z))
z[1072,]
setwd("~/GitHub/stat-433")
w19 <- process_data("data/bridgeData/WI19.txt")
process_data <- function(file,year){
w <- fread(file)
w <- mutate(w,DATA_YEAR=year)
w <- select(w,DATA_YEAR,FIPS_CODE=STATE_CODE_001,BRIDGE_ID=STRUCTURE_NUMBER_008, YEAR_BUILT=YEAR_BUILT_027, YEAR_RECONSTRCUTED=YEAR_RECONSTRUCTED_106,
AVERAGE_DAILY_TRAFFIC=ADT_029,YEAR_ADT=YEAR_ADT_030,FUTURE_ADT=FUTURE_ADT_114,
DECK_COND=DECK_COND_058,SUPERSTRUCTURE_COND=SUPERSTRUCTURE_COND_059,CHANNEL_COND=CHANNEL_COND_061,
CULVERT_COND=CULVERT_COND_062,OPERATING_RATING=OPERATING_RATING_064,INVENTORY_RATING=INVENTORY_RATING_066)
return (w)
}
w19 <- process_data("data/bridgeData/WI19.txt")
library(tidyverse)
library(data.table)
w19 <- process_data("data/bridgeData/WI19.txt")
w19 <- process_data("data/bridgeData/WI19.txt",2019)
View(w19)
View(w19)
w19 <- process_data("data/bridgeData/WI19.txt",2019)
w18 <- process_data("data/bridgeData/WI18.txt",2018)
w17 <- process_data("data/bridgeData/WI17.txt",2017)
w16 <- process_data("data/bridgeData/WI16.txt",2016)
w15 <- process_data("data/bridgeData/WI15.txt",2015)
w14 <- process_data("data/bridgeData/WI14.txt",2014)
w13 <- process_data("data/bridgeData/WI13.txt",2013)
w12 <- process_data("data/bridgeData/WI12.txt",2012)
w11 <- process_data("data/bridgeData/WI11.txt",2011)
w10 <- process_data("data/bridgeData/WI10.txt",2010)
w09 <- process_data("data/bridgeData/WI09.txt",2009)
w08 <- process_data("data/bridgeData/WI08.txt",2008)
w07 <- process_data("data/bridgeData/WI07.txt",2007)
w06 <- process_data("data/bridgeData/WI06.txt",2006)
w05 <- process_data("data/bridgeData/WI05.txt",2005)
w04 <- process_data("data/bridgeData/WI04.txt",2004)
w03 <- process_data("data/bridgeData/WI03.txt",2003)
w02 <- process_data("data/bridgeData/WI02.txt",2002)
w01 <- process_data("data/bridgeData/WI01.txt",2001)
w00 <- process_data("data/bridgeData/WI00.txt",2000)
w99 <- process_data("data/bridgeData/WI99.txt",1999)
w98 <- process_data("data/bridgeData/WI98.txt",1998)
w97 <- process_data("data/bridgeData/WI97.txt",1997)
w96 <- process_data("data/bridgeData/WI96.txt",1996)
w95 <- process_data("data/bridgeData/WI95.txt",1995)
w94 <- process_data("data/bridgeData/WI94.txt",1994)
w93 <- process_data("data/bridgeData/WI93.txt",1993)
w92 <- process_data("data/bridgeData/WI92.txt",1992)
# to find number of na values in each column
colSums(is.na(w19))
# to concatenate the data from every year
w_tot <- rbind(w19,w18,w17,w16,w15,w14,w13,w12,w11,w10,w09,w08,w07,w06,w05,w04,w03,w02,w01,w00,w99,w98,w97,w96,w95,w94,w93,w92)
colSums(is.na(w_tot))
# year_future_adt was removed
w_tot[is.na(w_tot$OPERATING_RATING),]
w_tot_nona <- na.omit(w_tot)
colSums(is.na(w_tot_nona))
bridges <- unique(w_tot_nona$BRIDGE_ID)
